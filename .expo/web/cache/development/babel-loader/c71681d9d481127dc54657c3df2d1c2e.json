{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationHelpersContext, useTheme } from '@react-navigation/native';\nimport { ScreenContainer, screensEnabled } from 'react-native-screens';\nimport SafeAreaProviderCompat, { initialSafeAreaInsets } from \"./SafeAreaProviderCompat\";\nimport ResourceSavingScene from \"./ResourceSavingScene\";\nimport BottomTabBar, { getTabBarHeight } from \"./BottomTabBar\";\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport BottomTabBarHeightContext from \"../utils/BottomTabBarHeightContext\";\n\nfunction SceneContent(_ref) {\n  var isFocused = _ref.isFocused,\n      children = _ref.children,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(View, {\n    accessibilityElementsHidden: !isFocused,\n    importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n    style: [styles.content, {\n      backgroundColor: colors.background\n    }, style]\n  }, children);\n}\n\nvar BottomTabView = function (_React$Component) {\n  _inherits(BottomTabView, _React$Component);\n\n  var _super = _createSuper(BottomTabView);\n\n  function BottomTabView(_props) {\n    var _this;\n\n    _classCallCheck(this, BottomTabView);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTabBar\", function () {\n      var _this$props = _this.props,\n          _this$props$tabBar = _this$props.tabBar,\n          tabBar = _this$props$tabBar === void 0 ? function (props) {\n        return React.createElement(BottomTabBar, props);\n      } : _this$props$tabBar,\n          tabBarOptions = _this$props.tabBarOptions,\n          state = _this$props.state,\n          navigation = _this$props.navigation,\n          descriptors = _this$props.descriptors;\n      return tabBar(_objectSpread(_objectSpread({}, tabBarOptions), {}, {\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTabBarHeightChange\", function (height) {\n      _this.setState(function (state) {\n        if (state.tabBarHeight !== height) {\n          return {\n            tabBarHeight: height\n          };\n        }\n\n        return null;\n      });\n    });\n\n    var _this$props2 = _this.props,\n        _state = _this$props2.state,\n        _tabBarOptions = _this$props2.tabBarOptions;\n    var dimensions = Dimensions.get('window');\n    var tabBarHeight = getTabBarHeight({\n      state: _state,\n      dimensions: dimensions,\n      layout: {\n        width: dimensions.width,\n        height: 0\n      },\n      insets: initialSafeAreaInsets,\n      adaptive: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.adaptive,\n      labelPosition: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.labelPosition,\n      tabStyle: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.tabStyle,\n      style: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.style\n    });\n    _this.state = {\n      loaded: [_state.routes[_state.index].key],\n      tabBarHeight: tabBarHeight\n    };\n    return _this;\n  }\n\n  _createClass(BottomTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          state = _this$props3.state,\n          descriptors = _this$props3.descriptors,\n          navigation = _this$props3.navigation,\n          lazy = _this$props3.lazy,\n          _this$props3$detachIn = _this$props3.detachInactiveScreens,\n          detachInactiveScreens = _this$props3$detachIn === void 0 ? true : _this$props3$detachIn,\n          sceneContainerStyle = _this$props3.sceneContainerStyle;\n      var routes = state.routes;\n      var _this$state = this.state,\n          loaded = _this$state.loaded,\n          tabBarHeight = _this$state.tabBarHeight;\n      var isScreensEnabled = (screensEnabled === null || screensEnabled === void 0 ? void 0 : screensEnabled()) && detachInactiveScreens;\n      return React.createElement(NavigationHelpersContext.Provider, {\n        value: navigation\n      }, React.createElement(SafeAreaProviderCompat, null, React.createElement(ScreenContainer, {\n        enabled: isScreensEnabled,\n        style: styles.container\n      }, routes.map(function (route, index) {\n        var descriptor = descriptors[route.key];\n        var unmountOnBlur = descriptor.options.unmountOnBlur;\n        var isFocused = state.index === index;\n\n        if (unmountOnBlur && !isFocused) {\n          return null;\n        }\n\n        if (lazy && !loaded.includes(route.key) && !isFocused) {\n          return null;\n        }\n\n        return React.createElement(ResourceSavingScene, {\n          key: route.key,\n          style: StyleSheet.absoluteFill,\n          isVisible: isFocused,\n          enabled: isScreensEnabled\n        }, React.createElement(SceneContent, {\n          isFocused: isFocused,\n          style: sceneContainerStyle\n        }, React.createElement(BottomTabBarHeightContext.Provider, {\n          value: tabBarHeight\n        }, descriptor.render())));\n      })), React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n        value: this.handleTabBarHeightChange\n      }, this.renderTabBar())));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n      return {\n        loaded: prevState.loaded.includes(focusedRouteKey) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [focusedRouteKey])\n      };\n    }\n  }]);\n\n  return BottomTabView;\n}(React.Component);\n\nexport { BottomTabView as default };\n\n_defineProperty(BottomTabView, \"defaultProps\", {\n  lazy: true\n});\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["React","NavigationHelpersContext","useTheme","ScreenContainer","screensEnabled","SafeAreaProviderCompat","initialSafeAreaInsets","ResourceSavingScene","BottomTabBar","getTabBarHeight","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","SceneContent","isFocused","children","style","colors","View","accessibilityElementsHidden","importantForAccessibility","styles","content","backgroundColor","background","BottomTabView","constructor","props","_defineProperty","tabBar","tabBarOptions","state","navigation","descriptors","height","setState","tabBarHeight","dimensions","Dimensions","get","layout","width","insets","adaptive","labelPosition","tabStyle","loaded","routes","index","key","render","lazy","detachInactiveScreens","sceneContainerStyle","isScreensEnabled","Provider","value","enabled","container","map","route","descriptor","unmountOnBlur","options","includes","StyleSheet","absoluteFill","isVisible","handleTabBarHeightChange","renderTabBar","nextProps","prevState","focusedRouteKey","Component","create","flex","overflow"],"sources":["BottomTabView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  NavigationHelpersContext,\n  ParamListBase,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport { ScreenContainer, screensEnabled } from 'react-native-screens';\n\nimport SafeAreaProviderCompat, {\n  initialSafeAreaInsets,\n} from './SafeAreaProviderCompat';\nimport ResourceSavingScene from './ResourceSavingScene';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabDescriptorMap,\n  BottomTabNavigationHelpers,\n  BottomTabBarProps,\n} from '../types';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\ntype State = {\n  loaded: string[];\n  tabBarHeight: number;\n};\n\nfunction SceneContent({\n  isFocused,\n  children,\n  style,\n}: {\n  isFocused: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      accessibilityElementsHidden={!isFocused}\n      importantForAccessibility={isFocused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.content, { backgroundColor: colors.background }, style]}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport default class BottomTabView extends React.Component<Props, State> {\n  static defaultProps = {\n    lazy: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(focusedRouteKey)\n        ? prevState.loaded\n        : [...prevState.loaded, focusedRouteKey],\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { state, tabBarOptions } = this.props;\n\n    const dimensions = Dimensions.get('window');\n    const tabBarHeight = getTabBarHeight({\n      state,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: initialSafeAreaInsets,\n      adaptive: tabBarOptions?.adaptive,\n      labelPosition: tabBarOptions?.labelPosition,\n      tabStyle: tabBarOptions?.tabStyle,\n      style: tabBarOptions?.style,\n    });\n\n    this.state = {\n      loaded: [state.routes[state.index].key],\n      tabBarHeight: tabBarHeight,\n    };\n  }\n\n  private renderTabBar = () => {\n    const {\n      tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n      tabBarOptions,\n      state,\n      navigation,\n      descriptors,\n    } = this.props;\n    return tabBar({\n      ...tabBarOptions,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n    });\n  };\n\n  private handleTabBarHeightChange = (height: number) => {\n    this.setState((state) => {\n      if (state.tabBarHeight !== height) {\n        return { tabBarHeight: height };\n      }\n\n      return null;\n    });\n  };\n\n  render() {\n    const {\n      state,\n      descriptors,\n      navigation,\n      lazy,\n      detachInactiveScreens = true,\n      sceneContainerStyle,\n    } = this.props;\n    const { routes } = state;\n    const { loaded, tabBarHeight } = this.state;\n    const isScreensEnabled = screensEnabled?.() && detachInactiveScreens;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <SafeAreaProviderCompat>\n          <ScreenContainer\n            // @ts-ignore\n            enabled={isScreensEnabled}\n            style={styles.container}\n          >\n            {routes.map((route, index) => {\n              const descriptor = descriptors[route.key];\n              const { unmountOnBlur } = descriptor.options;\n              const isFocused = state.index === index;\n\n              if (unmountOnBlur && !isFocused) {\n                return null;\n              }\n\n              if (lazy && !loaded.includes(route.key) && !isFocused) {\n                // Don't render a screen if we've never navigated to it\n                return null;\n              }\n\n              return (\n                <ResourceSavingScene\n                  key={route.key}\n                  style={StyleSheet.absoluteFill}\n                  isVisible={isFocused}\n                  enabled={isScreensEnabled}\n                >\n                  <SceneContent\n                    isFocused={isFocused}\n                    style={sceneContainerStyle}\n                  >\n                    <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                      {descriptor.render()}\n                    </BottomTabBarHeightContext.Provider>\n                  </SceneContent>\n                </ResourceSavingScene>\n              );\n            })}\n          </ScreenContainer>\n          <BottomTabBarHeightCallbackContext.Provider\n            value={this.handleTabBarHeightChange}\n          >\n            {this.renderTabBar()}\n          </BottomTabBarHeightCallbackContext.Provider>\n        </SafeAreaProviderCompat>\n      </NavigationHelpersContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}